{"ast":null,"code":"// Type guards\nexport function isSetupCompleteMessage(msg) {\n  return msg && typeof msg.setupComplete !== 'undefined';\n}\nexport function isServerContentMessage(msg) {\n  return msg && typeof msg.serverContent !== 'undefined';\n}\nexport function isToolCallMessage(msg) {\n  return msg && typeof msg.toolCall !== 'undefined';\n}\nexport function isToolCallCancellationMessage(msg) {\n  return msg && typeof msg.toolCallCancellation !== 'undefined';\n}\nexport function isModelTurn(content) {\n  return content && typeof content.modelTurn !== 'undefined';\n}\nexport function isInterrupted(content) {\n  return content && content.interrupted === true;\n}\nexport function isTurnComplete(content) {\n  return content && content.turnComplete === true;\n}","map":{"version":3,"names":["isSetupCompleteMessage","msg","setupComplete","isServerContentMessage","serverContent","isToolCallMessage","toolCall","isToolCallCancellationMessage","toolCallCancellation","isModelTurn","content","modelTurn","isInterrupted","interrupted","isTurnComplete","turnComplete"],"sources":["/Users/gagandeep.singh/Downloads/trp-main-feature-voice-first-ui/frontend2/src/types/multimodal-live-types.ts"],"sourcesContent":["import { Content, GenerativeContentBlob, Part } from '@google/generative-ai';\n\nexport interface LiveConfig {\n    model: string;\n    generationConfig?: {\n        responseModalities?: string;\n        speechConfig?: {\n            voiceConfig?: {\n                prebuiltVoiceConfig?: {\n                    voiceName: string;\n                };\n            };\n        };\n    };\n    systemInstruction?: {\n        parts: Array<{\n            text: string;\n        }>;\n    };\n    tools?: Array<{\n        functionDeclarations: any;\n    }>;\n}\n\nexport interface StreamingLog {\n    date: Date;\n    type: string;\n    message: any;\n}\n\nexport interface SetupMessage {\n    setup: LiveConfig;\n}\n\nexport interface RealtimeInputMessage {\n    realtimeInput: {\n        mediaChunks: GenerativeContentBlob[];\n    };\n}\n\nexport interface ClientContentMessage {\n    clientContent: {\n        turns: Content[];\n        turnComplete: boolean;\n    };\n}\n\nexport interface ToolResponseMessage {\n    toolResponse: {\n        functionResponses: Array<{\n            response: any;\n            id: string;\n        }>;\n    };\n}\n\nexport interface ModelTurn {\n    modelTurn: {\n        parts: Part[];\n    };\n}\n\nexport interface ServerContent {\n    modelTurn?: {\n        parts: Part[];\n    };\n    interrupted?: boolean;\n    turnComplete?: boolean;\n}\n\nexport interface ToolCall {\n    functionCalls?: Array<{\n        name: string;\n        id: string;\n        args?: any;\n    }>;\n}\n\nexport interface ToolCallCancellation {\n    ids: string[];\n}\n\nexport type LiveIncomingMessage = \n    | { setupComplete: {} }\n    | { serverContent: ServerContent }\n    | { toolCall: ToolCall }\n    | { toolCallCancellation: ToolCallCancellation };\n\n// Type guards\nexport function isSetupCompleteMessage(msg: any): msg is { setupComplete: {} } {\n    return msg && typeof msg.setupComplete !== 'undefined';\n}\n\nexport function isServerContentMessage(msg: any): msg is { serverContent: ServerContent } {\n    return msg && typeof msg.serverContent !== 'undefined';\n}\n\nexport function isToolCallMessage(msg: any): msg is { toolCall: ToolCall } {\n    return msg && typeof msg.toolCall !== 'undefined';\n}\n\nexport function isToolCallCancellationMessage(msg: any): msg is { toolCallCancellation: ToolCallCancellation } {\n    return msg && typeof msg.toolCallCancellation !== 'undefined';\n}\n\nexport function isModelTurn(content: ServerContent): content is { modelTurn: { parts: Part[] } } {\n    return content && typeof content.modelTurn !== 'undefined';\n}\n\nexport function isInterrupted(content: ServerContent): boolean {\n    return content && content.interrupted === true;\n}\n\nexport function isTurnComplete(content: ServerContent): boolean {\n    return content && content.turnComplete === true;\n}\n"],"mappings":"AAwFA;AACA,OAAO,SAASA,sBAAsBA,CAACC,GAAQ,EAAgC;EAC3E,OAAOA,GAAG,IAAI,OAAOA,GAAG,CAACC,aAAa,KAAK,WAAW;AAC1D;AAEA,OAAO,SAASC,sBAAsBA,CAACF,GAAQ,EAA2C;EACtF,OAAOA,GAAG,IAAI,OAAOA,GAAG,CAACG,aAAa,KAAK,WAAW;AAC1D;AAEA,OAAO,SAASC,iBAAiBA,CAACJ,GAAQ,EAAiC;EACvE,OAAOA,GAAG,IAAI,OAAOA,GAAG,CAACK,QAAQ,KAAK,WAAW;AACrD;AAEA,OAAO,SAASC,6BAA6BA,CAACN,GAAQ,EAAyD;EAC3G,OAAOA,GAAG,IAAI,OAAOA,GAAG,CAACO,oBAAoB,KAAK,WAAW;AACjE;AAEA,OAAO,SAASC,WAAWA,CAACC,OAAsB,EAA+C;EAC7F,OAAOA,OAAO,IAAI,OAAOA,OAAO,CAACC,SAAS,KAAK,WAAW;AAC9D;AAEA,OAAO,SAASC,aAAaA,CAACF,OAAsB,EAAW;EAC3D,OAAOA,OAAO,IAAIA,OAAO,CAACG,WAAW,KAAK,IAAI;AAClD;AAEA,OAAO,SAASC,cAAcA,CAACJ,OAAsB,EAAW;EAC5D,OAAOA,OAAO,IAAIA,OAAO,CAACK,YAAY,KAAK,IAAI;AACnD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}