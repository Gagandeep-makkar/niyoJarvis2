{"ast":null,"code":"/**\n * Audio utilities for Gemini Live integration\n */\n\nexport function arrayBufferToBase64(buffer) {\n  const uint8Array = new Uint8Array(buffer);\n  const binary = String.fromCharCode.apply(null, Array.from(uint8Array));\n  return btoa(binary);\n}\nexport function base64ToArrayBuffer(base64) {\n  const binaryString = atob(base64);\n  const bytes = new Uint8Array(binaryString.length);\n  for (let i = 0; i < binaryString.length; i++) {\n    bytes[i] = binaryString.charCodeAt(i);\n  }\n  return bytes.buffer;\n}\nexport async function createAudioContext(sampleRate = 16000) {\n  const audioContext = new (window.AudioContext || window.webkitAudioContext)({\n    sampleRate\n  });\n  if (audioContext.state === 'suspended') {\n    await audioContext.resume();\n  }\n  return audioContext;\n}\nexport function createWorkletUrl(workletSource) {\n  const blob = new Blob([workletSource], {\n    type: 'application/javascript'\n  });\n  return URL.createObjectURL(blob);\n}","map":{"version":3,"names":["arrayBufferToBase64","buffer","uint8Array","Uint8Array","binary","String","fromCharCode","apply","Array","from","btoa","base64ToArrayBuffer","base64","binaryString","atob","bytes","length","i","charCodeAt","createAudioContext","sampleRate","audioContext","window","AudioContext","webkitAudioContext","state","resume","createWorkletUrl","workletSource","blob","Blob","type","URL","createObjectURL"],"sources":["/Users/gagandeep.singh/Downloads/trp-main-feature-voice-first-ui/frontend2/src/lib/audio-utils.ts"],"sourcesContent":["/**\n * Audio utilities for Gemini Live integration\n */\n\nexport function arrayBufferToBase64(buffer: ArrayBuffer): string {\n  const uint8Array = new Uint8Array(buffer);\n  const binary = String.fromCharCode.apply(null, Array.from(uint8Array));\n  return btoa(binary);\n}\n\nexport function base64ToArrayBuffer(base64: string): ArrayBuffer {\n  const binaryString = atob(base64);\n  const bytes = new Uint8Array(binaryString.length);\n  for (let i = 0; i < binaryString.length; i++) {\n    bytes[i] = binaryString.charCodeAt(i);\n  }\n  return bytes.buffer;\n}\n\nexport async function createAudioContext(sampleRate: number = 16000): Promise<AudioContext> {\n  const audioContext = new (window.AudioContext || (window as any).webkitAudioContext)({\n    sampleRate\n  });\n  \n  if (audioContext.state === 'suspended') {\n    await audioContext.resume();\n  }\n  \n  return audioContext;\n}\n\nexport function createWorkletUrl(workletSource: string): string {\n  const blob = new Blob([workletSource], { type: 'application/javascript' });\n  return URL.createObjectURL(blob);\n}\n"],"mappings":"AAAA;AACA;AACA;;AAEA,OAAO,SAASA,mBAAmBA,CAACC,MAAmB,EAAU;EAC/D,MAAMC,UAAU,GAAG,IAAIC,UAAU,CAACF,MAAM,CAAC;EACzC,MAAMG,MAAM,GAAGC,MAAM,CAACC,YAAY,CAACC,KAAK,CAAC,IAAI,EAAEC,KAAK,CAACC,IAAI,CAACP,UAAU,CAAC,CAAC;EACtE,OAAOQ,IAAI,CAACN,MAAM,CAAC;AACrB;AAEA,OAAO,SAASO,mBAAmBA,CAACC,MAAc,EAAe;EAC/D,MAAMC,YAAY,GAAGC,IAAI,CAACF,MAAM,CAAC;EACjC,MAAMG,KAAK,GAAG,IAAIZ,UAAU,CAACU,YAAY,CAACG,MAAM,CAAC;EACjD,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,YAAY,CAACG,MAAM,EAAEC,CAAC,EAAE,EAAE;IAC5CF,KAAK,CAACE,CAAC,CAAC,GAAGJ,YAAY,CAACK,UAAU,CAACD,CAAC,CAAC;EACvC;EACA,OAAOF,KAAK,CAACd,MAAM;AACrB;AAEA,OAAO,eAAekB,kBAAkBA,CAACC,UAAkB,GAAG,KAAK,EAAyB;EAC1F,MAAMC,YAAY,GAAG,KAAKC,MAAM,CAACC,YAAY,IAAKD,MAAM,CAASE,kBAAkB,EAAE;IACnFJ;EACF,CAAC,CAAC;EAEF,IAAIC,YAAY,CAACI,KAAK,KAAK,WAAW,EAAE;IACtC,MAAMJ,YAAY,CAACK,MAAM,CAAC,CAAC;EAC7B;EAEA,OAAOL,YAAY;AACrB;AAEA,OAAO,SAASM,gBAAgBA,CAACC,aAAqB,EAAU;EAC9D,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACF,aAAa,CAAC,EAAE;IAAEG,IAAI,EAAE;EAAyB,CAAC,CAAC;EAC1E,OAAOC,GAAG,CAACC,eAAe,CAACJ,IAAI,CAAC;AAClC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}